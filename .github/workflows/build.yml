name: Build Executável Automático

on:
  push:
    branches: [main]

permissions:
  contents: write

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 10  # Reduzido pois o build deve ser mais rápido

    steps:
    - name: Checkout código
      uses: actions/checkout@v3

    - name: Configurar Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'  # Habilita cache para pip

    - name: Cache de dependências
      uses: actions/cache@v3
      id: cache
      with:
        path: |
          ~\AppData\Local\pip\Cache
          .\venv\
        key: ${{ runner.os }}-pip-${{ hashFiles('src/*.py') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Instalar dependências
      run: |
        python -m pip install --upgrade pip
        pip install pipreqs pyinstaller  # Instala direto as dependências de build
        if not exist requirements.txt (
          pipreqs src/ --force --savepath requirements.txt
          echo "pyinstaller" >> requirements.txt
        )
        pip install -r requirements.txt

    - name: Obter versão
      id: get_version
      run: |
        $version = Get-Content -Path src/version.txt -Raw
        $version = $version.Trim()
        echo "version=$version" >> $env:GITHUB_OUTPUT
      shell: pwsh

    - name: Gerar executável
      run: |
        pyinstaller --onefile --windowed --name SineApp `
        --add-data "src/assets/icons/*;assets/icons/" `
        --add-data "src/config.json;." `
        --add-data "src/version.txt;." `
        src/main.py

    - name: Publicar no GitHub Releases
      uses: softprops/action-gh-release@v1
      with:
        files: dist/SineApp.exe
        tag_name: v${{ steps.get_version.outputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}